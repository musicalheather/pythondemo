# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
orbs:
  aws-cli: circleci/aws-cli@0.1.16
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1
      - image: postgres:11
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: atc_project

    working_directory: ~/repo

    steps:
      - setup_remote_docker

      - run:
          name: create AWS env vars
          command: |
            echo 'export AWS_ACCESS_KEY_ID="<ID>"' >> $BASH_ENV
            echo 'export AWS_SECRET_ACCESS_KEY="<key>"' >> $BASH_ENV
            echo 'export AWS_DEFAULT_REGION="us-east-1"' >> $BASH_ENV

      - aws-cli/setup:
          profile-name: default

      - checkout

      - run:
          name: reset repo to HEAD
          command: |
            git reset --hard "$CIRCLE_SHA1"
            git checkout -q -B "$CIRCLE_BRANCH"

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            export DBHOST=localhost
            export PGUSER=postgres
            export PGPASS=postgres
            python manage.py test

      - store_artifacts:
          path: test-reports
          destination: test-reports

      - run:
          name: docker push
          command: |
            docker build . -t demo
            docker tag demo 359747720927.dkr.ecr.us-east-1.amazonaws.com/demoproject:$CIRCLE_BUILD_NUM
            $(aws ecr get-login)
            docker push 359747720927.dkr.ecr.us-east-1.amazonaws.com/demoproject:$CIRCLE_BUILD_NUM
